{"version":3,"sources":["components/documentation/DocumentComponent.js","components/generic/Loading.js","views/DocumentationView.js","components/generic/DisplayTime.js","components/generic/DisplayDescription.js","components/generic/Panel.js","utils/helpers.js","utils/TimersProvider.js","components/timers/Stopwatch.js","components/timers/Countdown.js","components/generic/DisplayRounds.js","components/timers/XY.js","components/generic/DisplayTitle.js","components/timers/Tabata.js","components/generic/Button.js","components/generic/TimerInput.js","components/generic/DescriptionInput.js","views/AddTimersView.js","views/TimersView.js","App.js","index.js"],"names":["Wrapper","styled","div","_templateObject","_taggedTemplateLiteral","Container","_templateObject2","Title","_templateObject3","RenderComponent","_templateObject4","Documentation","table","_templateObject5","DocumentComponent","_ref","title","component","propDocs","React","createElement","map","doc","index","key","prop","description","type","defaultValue","primaryColor","sizeMapping","small","medium","large","Dot","span","props","size","color","DotGroup","Loading","DisplayTime","minutes","seconds","style","marginBottom","toString","padStart","DisplayDescription","onChange","fontSize","marginRight","Panel","children","textAlign","border","borderRadius","padding","paddingTop","margin","backgroundColor","CalculateTotalSeconds","parseInt","CalculateMinutesSeconds","totalSeconds","Math","floor","makeId","result","characters","charactersLength","length","i","charAt","random","CreateHash","timers","steps","time","startMinutes","startSeconds","selectedTimer","rounds","startRestMinutes","startRestSeconds","TimersContext","createContext","TimersProvider","setTimers","useState","setSelectedTimer","editTimer","setEditTimer","currentTimer","setCurrentTimer","currentIndex","setCurrentIndex","running","setRunning","hash","setHash","_window$location$hash","window","location","slice","decodeURIComponent","totalTime","setTotalTime","useRef","closeEditor","minutesOptions","push","roundsOptions","j","useEffect","pathname","hashTimers","split","timerTypes","newTimers","includes","id","isRunning","Provider","value","editorOpen","secondsOptions","deleteTimer","_ref2","filter","x","openEditor","openTimer","_ref3","t","find","handleWorkoutReset","handlePauseResume","handleFastForward","prev","handleTimerStart","saveTimer","_ref4","updatedTimer","updatedTimers","Stopwatch","useContext","counter","setCounter","secondsCountInterval","storedTime","localStorage","getItem","JSON","parse","timeDifference","current","setInterval","setItem","stringify","clearInterval","c","textTransform","Countdown","duration","DisplayRounds","round","totalRounds","XY","roundsCounter","setRoundsCounter","storedRound","DisplayTitle","Tabata","workDuration","restDuration","restCounter","setRestCounter","storedRestTime","restTimeDifference","workTimeDifference","prevRest","Button","onClick","interval","start","width","fontWeight","TimerInput","options","timeType","listOptions","option","e","target","DescriptionInput","Editor","_editorTimer$selected","_editorTimer$startMin","_editorTimer$startSec","_editTimer$rounds","_editorTimer$restMinu","_editorTimer$restSeco","_editorTimer$descript","editorTimer","setStartMinutes","setStartSeconds","setRounds","setStartRestMinutes","restMinutes","setStartRestSeconds","restSeconds","setDescription","handleSelectedTimerMinutes","handleSelectedTimerSeconds","handleSelectedTimerRounds","handleSelectedTimerDescription","ErrorBoundary","fallback","FallbackComponent","MyFallbackComponent","handleAddTimerInput","marginTop","AddTimersView","timer","Timers","Timer","error","resetErrorBoundary","role","message","TimersView","encodeURIComponent","timersDisplay","C","total","moveTimerUp","newIndex","tempTimer","console","log","concat","moveTimerDown","Nav","Link","to","textDecoration","App","Router","Routes","Route","path","element","DocumentationView","ReactDOM","createRoot","document","getElementById","render","StrictMode"],"mappings":"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","file":"static/js/main.0f145409.chunk.js","sourcesContent":["import React from \"react\";\nimport styled from \"styled-components\";\n\nconst Wrapper = styled.div`\n  border: 1px solid #121212;\n  margin: 20px 0px;\n`;\n\nconst Container = styled.div`\n  padding: 20px;\n  display: flex;\n  justify-content: space-between;\n`;\n\nconst Title = styled.div`\n  display: flex;\n  justify-content: center;\n  padding-top: 20px;\n  font-size: 1.3rem;\n`;\n\nconst RenderComponent = styled.div`\n  padding: 25px;\n  display: flex;\n  align-items: center;\n`;\n\nconst Documentation = styled.table``;\n\nconst DocumentComponent = ({ title, component, propDocs }) => {\n  return (\n    <Wrapper>\n      <Title>{title}</Title>\n      <Container>\n        <RenderComponent>{component}</RenderComponent>\n        <Documentation>\n          <thead>\n            <tr>\n              <th>Prop</th>\n              <th>Description</th>\n              <th>Type</th>\n              <th>Default value</th>\n            </tr>\n          </thead>\n          <tbody>\n            {propDocs.map((doc, index) => {\n              return (\n                <tr key={index}>\n                  <td>{doc.prop}</td>\n                  <td>{doc.description}</td>\n                  <td>{doc.type}</td>\n                  <td>\n                    <code>{doc.defaultValue}</code>\n                  </td>\n                </tr>\n              );\n            })}\n          </tbody>\n        </Documentation>\n      </Container>\n    </Wrapper>\n  );\n};\n\nexport default DocumentComponent;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\n\nconst primaryColor = \"#ffa2bf\";\n\nconst sizeMapping = {\n  small: 10,\n  medium: 14,\n  large: 20,\n};\n\nconst Container = styled.div`\n  animation: spin 1.5s linear infinite;\n\n  @-moz-keyframes spin {\n    100% {\n      -moz-transform: rotate(360deg);\n    }\n  }\n  @-webkit-keyframes spin {\n    100% {\n      -webkit-transform: rotate(360deg);\n    }\n  }\n  @keyframes spin {\n    100% {\n      -webkit-transform: rotate(360deg);\n      transform: rotate(360deg);\n    }\n  }\n`;\n\nconst Dot = styled.span`\n  display: block;\n  width: ${(props) => props.size}px;\n  height: ${(props) => props.size}px;\n  background-color: ${(props) => props.color};\n  border-radius: 100%;\n  transform: scale(0.75);\n  transform-origin: 50% 50%;\n  opacity: 0.3;\n  animation: wobble 1s ease-in-out infinite;\n\n  @keyframes wobble {\n    0% {\n      border-radius: 25%;\n    }\n    100% {\n      border-radius: 100%;\n    }\n  }\n`;\n\nconst DotGroup = styled.div`\n  display: flex;\n`;\n\nconst Loading = ({ size = \"medium\", color = primaryColor }) => {\n  return (\n    <Container>\n      <DotGroup>\n        <Dot size={sizeMapping[size]} color={color} />\n        <Dot size={sizeMapping[size]} color={color} />\n      </DotGroup>\n      <DotGroup>\n        <Dot size={sizeMapping[size]} color={color} />\n        <Dot size={sizeMapping[size]} color={color} />\n      </DotGroup>\n    </Container>\n  );\n};\n\nLoading.propTypes = {\n  size: PropTypes.oneOf([\"small\", \"medium\", \"large\"]),\n  color: PropTypes.string,\n};\n\nexport default Loading;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nimport DocumentComponent from \"../components/documentation/DocumentComponent\";\n\nimport Loading from \"../components/generic/Loading\";\n\nconst Container = styled.div`\n  display: flex;\n  justify-content: center;\n  width: 100%;\n`;\n\nconst Title = styled.div`\n  font-size: 2rem;\n`;\n\n/**\n * You can document your components by using the DocumentComponent component\n */\nconst Documentation = () => {\n  return (\n    <Container>\n      <div>\n        <Title>Documentation</Title>\n        <DocumentComponent\n          title=\"Loading spinner \"\n          component={<Loading />}\n          propDocs={[\n            {\n              prop: \"size\",\n              description: \"Changes the size of the loading spinner\",\n              type: \"string\",\n              defaultValue: \"medium\",\n            },\n          ]}\n        />\n      </div>\n    </Container>\n  );\n};\n\nexport default Documentation;\n","import React from \"react\";\n\nconst DisplayTime = ({minutes, seconds}) => {\n    return(\n        <div style={{\n            marginBottom: 10\n        }}>\n            {minutes.toString().padStart(2,\"0\")}:{seconds.toString().padStart(2,\"0\")}\n        </div>\n    );\n };\n \n export default DisplayTime;\n","import React from \"react\";\n\nconst DisplayDescription = ({description, onChange}) => {\n    return(\n        <span style={{\n            fontSize: \"1rem\",\n            marginRight: 5,\n        }}>\n            {description}\n        </span>\n    );\n };\n \n export default DisplayDescription;\n","import React from \"react\";\n\n\nconst Panel = ({ type, children }) => {\n  \n    // here you can apply some styling or arrange\n    // elements as you wish, maybe pass the type in for example\n    return (<div style={{\n        textAlign: \"center\",\n        color: \"#555555\",\n        border: \"solid\",\n        borderRadius: \"10%\",\n        padding: 20,\n        paddingTop: 5,\n        margin: 10,\n        backgroundColor: \"#ffffff\",\n        fontSize: \"1.25rem\"\n        \n    }}>\n      <h3 style={{\n        marginBottom: 5,\n        fontSize: \"2rem\"\n      }}>{type}</h3>\n      {children}\n    </div>\n    );  \n};\n  \n\n\nexport default Panel;","// Add helpers here. This is usually code that is just JS and not React code. Example: write a function that\n// calculates number of minutes when passed in seconds. Things of this nature that you don't want to copy/paste\n// everywhere.\n\n\n// Convert minutes and seconds to seconds\nexport const CalculateTotalSeconds = (minutes, seconds) => {\n    if (!minutes){\n        minutes = 0;\n    }\n    if (!seconds){\n        seconds = 0;\n    }\n    const total = (parseInt(minutes * 60)) + parseInt(seconds);\n    return total;\n};\n\n\n// Convert seconds to minutes and seconds\nexport const CalculateMinutesSeconds = totalSeconds => {\n    const minutes = Math.floor(totalSeconds / 60);\n    const seconds = totalSeconds % 60;\n    return [minutes, seconds];\n};\n\n\n\nexport const HandleStopButton = ((prop, interval, start) => {\n    if (prop === 'paused'){\n        if (interval.current) {\n            clearInterval(interval.current);\n            interval.current = null;\n        }\n        else {\n            start();\n        }\n    }\n\n});\n\n\n\n//From blog lecture example\nexport const makeId = () => {\n    var result = '';\n    var characters = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n    var charactersLength = characters.length;\n    for (var i = 0; i < 20; i++) {\n      result += characters.charAt(Math.floor(Math.random() * charactersLength));\n    }\n    return result;\n  };\n\n\n  export const CreateHash = ((timers) => {\n    let steps = '';\n    for (let i=0; i<timers.length; i++) {\n      let time = CalculateTotalSeconds(timers[i].startMinutes, timers[i].startSeconds);\n      steps += '-' + timers[i].selectedTimer + '-' + time;\n\n        steps += '-' + timers[i].rounds;\n\n        let restTime = CalculateTotalSeconds(timers[i].startRestMinutes, timers[i].startRestSeconds);\n\n        steps += '-' + restTime;\n\n    }\n    steps += '-';\n    return steps;\n\n  });\n\n\n","import React, { useState, useRef, useEffect } from 'react';\nimport { makeId, CreateHash, CalculateMinutesSeconds } from \"../utils/helpers\";\n\nexport const TimersContext = React.createContext({});\n\nconst TimersProvider = ({ children }) => {\n    const [timers, setTimers] = useState([]);\n    const [selectedTimer, setSelectedTimer] = useState(null);\n    const [editTimer, setEditTimer] = useState(null);\n    const [currentTimer, setCurrentTimer] = useState(null);\n    const [currentIndex, setCurrentIndex] = useState(null);\n    const [running, setRunning] = useState(false);\n    const [hash, setHash] = useState(() => {\n        const hash = (window.location.hash ?? '').slice(1);\n        return decodeURIComponent(hash);\n    });\n\n    const [totalTime, setTotalTime] = useState(0);\n\n    const totalSeconds = useRef(0);\n\n\n    const closeEditor = () => {\n        setEditTimer(null);\n    };\n\n    const secondsOptions = [0, 5, 15, 30, 45];\n    \n    const minutesOptions = []\n    for (let i=0; i < 60; i++){\n        minutesOptions.push(i);\n    }\n\n    const roundsOptions = []\n    for (let j=1; j < 20; j++){\n        roundsOptions.push(j);\n    }\n\n\n    useEffect(()=>{\n        if(window.location.pathname === '/') {\n            if (hash){\n                let hashTimers = hash.split('-');\n                const timerTypes = ['Stopwatch', 'Countdown', 'XY', 'Tabata'];\n\n\n                const newTimers = [];\n\n                for (let i = 0; i <= hashTimers.length; i++) {\n                if (timerTypes.includes(hashTimers[i])) {\n\n                    newTimers.push({\n                    id: makeId(),\n                    index: timers.length === 0 ? 0 : timers.length,\n                    selectedTimer: hashTimers[i],\n                    startMinutes: CalculateMinutesSeconds(\n                        parseInt(hashTimers[i + 1])\n                    )[0],\n                    startSeconds: CalculateMinutesSeconds(\n                        parseInt(hashTimers[i + 1])\n                    )[1],\n                    rounds:\n                        hashTimers[i] === \"XY\" || hashTimers[i] === \"Tabata\"\n                        ? hashTimers[i + 2]\n                        : 0,\n                    startRestMinutes:\n                        hashTimers[i] === \"Tabata\"\n                        ? CalculateMinutesSeconds(parseInt(hashTimers[i + 3]))[0]\n                        : 0,\n                    startRestSeconds:\n                        hashTimers[i] === \"Tabata\"\n                        ? CalculateMinutesSeconds(parseInt(hashTimers[i + 3]))[1]\n                        : 0,\n                    isRunning: \"not running\",\n                    });\n                }\n\n                setTimers(newTimers);\n                }\n            }\n        }\n  \n    }, []) // eslint-disable-line\n\n\n    useEffect(()=>{\n        if(window.location.pathname === '/') {\n            setHash(()=>{\n                return CreateHash(timers);\n            });\n        }\n\n    }, [timers])\n\n\n    return (\n        <TimersContext.Provider\n            value={{\n                timers,\n                setTimers,\n                editorOpen: !!editTimer,\n                editTimer,\n                setEditTimer,\n                currentTimer,\n                setCurrentTimer,\n                currentIndex,\n                setCurrentIndex,\n                selectedTimer,\n                setSelectedTimer,\n                secondsOptions,\n                minutesOptions,\n                roundsOptions,\n                totalSeconds,\n                running,\n                setRunning,\n                hash,\n                setHash,\n                totalTime,\n                setTotalTime,\n                closeEditor,\n                deleteTimer: ({ id }) => setTimers(timers.filter(x => x.id !== id)),\n                openEditor: () => setEditTimer({}),\n\n                openTimer: ({ id }) => {\n                    const t = timers.find(t => t.id === id);\n                    setEditTimer(t);\n                  },\n\n                handleWorkoutReset: () =>{\n                    timers[currentIndex].isRunning = 'not running';\n                    setCurrentIndex(null);\n                },\n                \n                handlePauseResume: () => {\n                    if (running === true){\n                        setRunning(false);\n                    }\n                    else {\n                        setRunning(true);\n                    }\n                },\n\n                handleFastForward: () => {\n                    setCurrentIndex(prev => {\n                        return prev + 1;\n                    });\n                },\n\n\n                handleTimerStart: () => {\n                    if (currentIndex) {\n                        setCurrentIndex(currentIndex);\n                    }\n                    else {\n                        setCurrentIndex(0);\n                    }       \n                    setRunning(true);\n                    \n                },\n\n                saveTimer: ({ id, index, selectedTimer, startMinutes, startSeconds, rounds, startRestMinutes, startRestSeconds, isRunning, description }) => {\n                    const updatedTimer = {\n                        id,\n                        index,\n                        selectedTimer,\n                        startMinutes,\n                        startSeconds, \n                        rounds,\n                        startRestMinutes,\n                        startRestSeconds,\n                        isRunning,\n                        description,\n                    };\n                    \n                    if (id) {\n                        const updatedTimers = timers.map(t => (t.id === id ? updatedTimer : t ));\n                        setTimers(updatedTimers);\n                    } else {\n                        \n                        setTimers([\n                            ...timers,\n                            {\n                                ...updatedTimer,\n                                id: makeId(),\n                                index: (timers.length === 0) ? 0 : timers.length,\n                                isRunning: 'not running',\n                                \n                              \n                            },\n                        ])\n                        \n                    }\n                    closeEditor();\n            \n                },\n \n            }}\n        >\n            {children}\n        </TimersContext.Provider>\n\n\n    );\n};\n\nexport default TimersProvider;","import React from \"react\";\nimport {  useContext, useRef, useState, useEffect } from 'react';\n\nimport DisplayTime from \"../generic/DisplayTime\";\nimport DisplayDescription from \"../generic/DisplayDescription\";\nimport Panel from \"../generic/Panel\";\nimport { CalculateMinutesSeconds, CalculateTotalSeconds } from \"../../utils/helpers\";\nimport { TimersContext } from \"../../utils/TimersProvider\";\n\n\nconst Stopwatch = ({id, index, startMinutes, startSeconds, isRunning, description }) =>  {\n    const { currentIndex, setCurrentIndex, running, setTotalTime } = useContext(TimersContext);\n    const [counter, setCounter] = useState(0);\n    const secondsCountInterval = useRef(0);\n    const totalSeconds = useRef(CalculateTotalSeconds(startMinutes, startSeconds));\n    \n\n    if (index === currentIndex){\n        isRunning = 'running';\n    }\n    else if (index < currentIndex){\n        isRunning = 'completed';\n    }\n    else {\n        isRunning = 'not running';\n    }\n\n\n    useEffect(() => {\n      const storedTime = window.localStorage.getItem(index);\n      if (storedTime) {\n        setCounter(JSON.parse(storedTime));\n        const timeDifference = (CalculateTotalSeconds(startMinutes, startSeconds)) - (JSON.parse(storedTime));\n        setTotalTime(prev => {\n          return prev - timeDifference;\n        });\n      }\n\n\n    }, []); // eslint-disable-line\n\n    // Start timer\n    useEffect(() => {\n\n        if (index === currentIndex && running === true) {\n            secondsCountInterval.current = setInterval(() => {\n            setCounter(prev => {\n              if (prev % 5 === 0){\n                window.localStorage.setItem(index, JSON.stringify(prev));\n              }\n              return prev + 1;\n            });\n\n            setTotalTime(prev => {\n              return prev - 1;\n            });\n\n            \n          }, 1000);\n        }\n\n        else if (running === false) {\n          clearInterval(secondsCountInterval.current);\n        }\n    \n        return () => {\n          clearInterval(secondsCountInterval.current);\n        };\n      }, [currentIndex, index, running]); // eslint-disable-line\n    \n      // Go to next timer when current timer ends.\n      useEffect(() => {\n        if (counter === totalSeconds.current) {\n          clearInterval(secondsCountInterval.current);\n          setCurrentIndex(c => c + 1);\n        }\n      }, [counter, setCurrentIndex]);\n\n\treturn (\n        <div>\n            <Panel type=\"Stopwatch\">\n      \n                <div>\n                    <h5 style = {{\n                        textTransform: 'capitalize',\n                    }}\n                    \n                    >{isRunning}</h5>\n                </div>\n                {isRunning ==='running' && <DisplayDescription description={description}/>}\n                {isRunning === 'running' && <DisplayTime minutes={CalculateMinutesSeconds(counter)[0]} seconds={CalculateMinutesSeconds(counter)[1]}/>}\n                {isRunning === 'not running' && <DisplayTime minutes=\"0\" seconds=\"0\"/>}\n                {isRunning === 'completed' && <DisplayTime minutes={startMinutes} seconds={startSeconds}/>}\n                            \n            \n            </Panel>\n        </div>\n\n\t\t);\n};\nexport default Stopwatch;\n","import React from \"react\";\nimport { useState, useEffect, useRef, useContext } from 'react';\n\nimport DisplayTime from \"../generic/DisplayTime\";\nimport DisplayDescription from \"../generic/DisplayDescription\";\nimport Panel from \"../generic/Panel\";\nimport { TimersContext } from \"../../utils/TimersProvider\";\n\nimport { CalculateMinutesSeconds, CalculateTotalSeconds } from \"../../utils/helpers\";\n\n\nconst Countdown = ({ id, index, startMinutes, startSeconds, isRunning, description})=> {\n    const { currentIndex, setCurrentIndex, running, setTotalTime } = useContext(TimersContext);\n    \n    const duration = CalculateTotalSeconds(startMinutes, startSeconds);\n    const [counter, setCounter] = useState(duration);\n    const secondsCountInterval = useRef(0);\n\n    if (index === currentIndex){\n        isRunning = 'running';\n    }\n    else if (index < currentIndex){\n        isRunning = 'completed';\n    }\n    else {\n        isRunning = 'not running';\n    }\n\n    useEffect(() => {\n        const storedTime = window.localStorage.getItem(index);\n        if (storedTime) {\n          setCounter(JSON.parse(storedTime));\n          const timeDifference = (CalculateTotalSeconds(startMinutes, startSeconds)) - (JSON.parse(storedTime));\n          setTotalTime(prev => {\n            return prev - timeDifference;\n          });\n        }\n\n  \n      }, []); // eslint-disable-line\n\n    useEffect(() => {\n        if (index === currentIndex && running === true) {\n            secondsCountInterval.current = setInterval(() => {\n            setCounter(prev => {\n                if (prev % 5 === 0){\n                    window.localStorage.setItem(index, JSON.stringify(prev));\n                  }\n              return prev - 1;\n            });\n\n            setTotalTime(prev => {\n                return prev - 1;\n              });\n\n          }, 1000);\n        }\n\n        else if (running === false) {\n            clearInterval(secondsCountInterval.current);\n        }\n    \n        return () => {\n          clearInterval(secondsCountInterval.current);\n        };\n      }, [currentIndex, index, running]); // eslint-disable-line\n    \n      useEffect(() => {\n        if (counter === 0) {\n          clearInterval(secondsCountInterval.current);\n          setCurrentIndex(c => c + 1);\n        }\n      }, [counter, setCurrentIndex]);\n\n\treturn (\n        <div>\n            <Panel type=\"Countdown\">\n      \n                <div>\n                    <h5 style = {{\n                        textTransform: 'capitalize',\n                    }}\n                    \n                    >{isRunning}</h5>\n                </div>\n                {isRunning ==='running' && <DisplayDescription description={description}/>}\n                {isRunning === 'running' && <DisplayTime minutes={CalculateMinutesSeconds(counter)[0]} seconds={CalculateMinutesSeconds(counter)[1]}/>}\n                {isRunning === 'not running' && <DisplayTime minutes={startMinutes} seconds={startSeconds}/>}\n                {isRunning === 'completed' && <DisplayTime minutes=\"0\" seconds=\"0\" />}\n            </Panel>\n        </div>\n\n\t\t);\n};\n\n\nexport default Countdown;\n","import React from \"react\";\n\nconst DisplayRounds = ({round, totalRounds}) => {\n    return(\n        <div style={{\n            fontSize: \"1rem\",\n            marginRight: 5,\n        }}>\n            Round: {round} of {totalRounds}\n        </div>\n    );\n };\n \n export default DisplayRounds;\n","import React from \"react\";\nimport { useContext, useRef, useState, useEffect } from 'react';\n\nimport DisplayTime from \"../generic/DisplayTime\";\nimport DisplayRounds from \"../generic/DisplayRounds\";\nimport DisplayDescription from \"../generic/DisplayDescription\";\nimport Panel from \"../generic/Panel\";\nimport { CalculateMinutesSeconds, CalculateTotalSeconds } from \"../../utils/helpers\";\nimport { TimersContext } from \"../../utils/TimersProvider\";\n\nconst XY = ({ id, index, startMinutes, startSeconds, rounds, isRunning, description }) => {\n    const { currentIndex, setCurrentIndex, running, setTotalTime } = useContext(TimersContext);\n\n    const duration = CalculateTotalSeconds(startMinutes, startSeconds);\n    const [counter, setCounter] = useState(duration);\n    const secondsCountInterval = useRef(0);\n    const [roundsCounter, setRoundsCounter] = useState(1);\n\n    if (index === currentIndex){\n        isRunning = 'running';\n    }\n    else if (index < currentIndex){\n        isRunning = 'completed';\n    }\n    else {\n        isRunning = 'not running';\n    }\n\n\n    useEffect(() => {\n      const storedTime = window.localStorage.getItem(index);\n      const storedRound = window.localStorage.getItem('XYRound');\n\n      if (storedTime) {\n        setCounter(JSON.parse(storedTime));\n        const timeDifference = (CalculateTotalSeconds(startMinutes, startSeconds)) - (JSON.parse(storedTime));\n        setTotalTime(prev => {\n          return prev - timeDifference;\n        });\n      }\n\n      if(storedRound) {\n        setRoundsCounter(JSON.parse(storedRound));\n      }\n\n\n    }, []); // eslint-disable-line\n\n    useEffect(() => {\n        if (index === currentIndex && running === true) {\n            secondsCountInterval.current = setInterval(() => {\n            setCounter(prev => {\n              if (prev % 5 === 0){\n                window.localStorage.setItem(index, JSON.stringify(prev));\n              }\n              return prev - 1;\n            });\n\n            setTotalTime(prev => {\n              return prev - 1;\n            });\n\n          }, 1000);\n        }\n\n        else if (running === false) {\n          clearInterval(secondsCountInterval.current);\n      }\n    \n        return () => {\n          clearInterval(secondsCountInterval.current);\n        };\n      }, [currentIndex, index, running]); // eslint-disable-line\n    \n      useEffect(() => {\n        if (counter === 0 && roundsCounter < rounds){\n            setRoundsCounter( prev=> {\n                window.localStorage.setItem('XYRound', JSON.stringify(prev + 1));\n                return prev + 1;\n            });\n            setCounter(duration);\n        }; \n\n        if (counter === 0 && parseInt(roundsCounter) === parseInt(rounds)) {\n          clearInterval(secondsCountInterval.current);\n          setCurrentIndex(c => c + 1);\n        }\n      }, [counter, rounds, index, duration, roundsCounter, setCurrentIndex]);\n\n\n    return (\n        <div>\n            <Panel type=\"XY\">\n            \n                <div>\n                    <h5 style = {{\n                        textTransform: 'capitalize',\n                    }}\n                    \n                    >{isRunning}</h5>\n                </div>\n                {isRunning ==='running' && <DisplayDescription description={description}/>}\n                {isRunning === 'running' && <DisplayRounds round={roundsCounter} totalRounds={rounds} />}\n                {(isRunning ==='not running' || isRunning ==='completed') && <DisplayRounds round=\"1\" totalRounds={rounds} />}\n                                \n                {isRunning === 'running' && <DisplayTime minutes={CalculateMinutesSeconds(counter)[0]} seconds={CalculateMinutesSeconds(counter)[1]}/>}\n                {isRunning ==='not running' && <DisplayTime minutes={startMinutes} seconds={startSeconds}/>}\n                {isRunning ==='completed' && <DisplayTime minutes=\"0\" seconds=\"0\" />}\n    \n            </Panel>        \n        </div>\n\n        );\n};\n\n\n\n\n\nexport default XY;\n","import React from \"react\";\n\nconst DisplayTitle = ({title}) => {\n    return(\n        <span style={{\n            fontSize: \"1rem\",\n            marginRight: 5,\n        }}>\n            {title}\n        </span>\n    );\n };\n \n export default DisplayTitle;\n","import React from \"react\";\nimport { useContext, useRef, useState, useEffect } from 'react';\n\nimport DisplayTime from \"../generic/DisplayTime\";\nimport DisplayRounds from \"../generic/DisplayRounds\";\nimport Panel from \"../generic/Panel\";\nimport DisplayTitle from \"../generic/DisplayTitle\";\nimport DisplayDescription from \"../generic/DisplayDescription\";\nimport { CalculateMinutesSeconds, CalculateTotalSeconds } from \"../../utils/helpers\";\nimport { TimersContext } from \"../../utils/TimersProvider\";\n\nconst Tabata = ({ id, index, startMinutes, startSeconds, rounds, startRestMinutes, startRestSeconds, isRunning, description }) => {\n    \n    const { currentIndex, setCurrentIndex, running, setTotalTime } = useContext(TimersContext);\n\n    const workDuration = CalculateTotalSeconds(startMinutes, startSeconds);\n    const restDuration = CalculateTotalSeconds(startRestMinutes, startRestSeconds);\n    const [counter, setCounter] = useState(workDuration);\n    const [restCounter, setRestCounter] = useState(restDuration);\n    const secondsCountInterval = useRef(0);\n    const [roundsCounter, setRoundsCounter] = useState(1);\n\n    if (index === currentIndex){\n        isRunning = 'running';\n    }\n    else if (index < currentIndex){\n        isRunning = 'completed';\n    }\n    else {\n        isRunning = 'not running';\n    }\n\n\n    useEffect(() => {\n        const storedTime = window.localStorage.getItem(index);\n        const storedRestTime = window.localStorage.getItem('rest');\n        const storedRound = window.localStorage.getItem('TabataRound');\n\n        let restTimeDifference = 0;\n        if (storedTime) {\n          setCounter(JSON.parse(storedTime));\n          const workTimeDifference = (JSON.parse(storedTime));\n            if(storedRestTime){\n                restTimeDifference = (JSON.parse(storedRestTime));\n            }\n          const timeDifference = (CalculateTotalSeconds(startMinutes, startSeconds)) - (workTimeDifference + restTimeDifference);  \n          setTotalTime(prev => {\n            return prev - timeDifference;\n          });\n        }\n        if(storedRound){\n            setRoundsCounter(JSON.parse(storedRound));\n        }\n\n  \n      }, []); // eslint-disable-line\n\n    useEffect(() => {\n        if (index === currentIndex && running === true) {\n            secondsCountInterval.current = setInterval(() => {\n                if(counter > 0){\n                    setCounter(prev => {\n                        if (prev % 5 === 0){\n                            window.localStorage.setItem(index, JSON.stringify(prev));\n                          }\n                        return prev - 1;\n                    });\n\n                    setTotalTime(prev => {\n                        return prev - 1;\n                      });\n                }\n                else if (counter <= 0 && restCounter > 0){\n                    setRestCounter(prevRest => {\n                        if (prevRest % 5 === 0){\n                            window.localStorage.setItem('rest', JSON.stringify(prevRest));\n                          }\n                        return prevRest - 1;\n                    });\n\n                    setTotalTime(prev => {\n                        return prev - 1;\n                      });\n                }\n            \n          }, 1000);\n        }\n\n        else if (running === false) {\n            clearInterval(secondsCountInterval.current);\n        }\n    \n        return () => {\n          clearInterval(secondsCountInterval.current);\n        };\n      }, [currentIndex, counter, restCounter, index, running]); // eslint-disable-line\n\n      useEffect(() => {\n        if (restCounter === 0 && roundsCounter < rounds){\n            setRoundsCounter( prev=> {\n                window.localStorage.setItem('TabataRound', JSON.stringify(prev + 1));\n                return prev + 1;\n            });\n            setCounter(workDuration);\n            setRestCounter(restDuration);\n        }; \n        if (restCounter === 0 && parseInt(roundsCounter) === parseInt(rounds)) {\n          clearInterval(secondsCountInterval.current);\n          setCurrentIndex(c => c + 1);\n        }\n      }, [restCounter, roundsCounter, restDuration, rounds, setCurrentIndex, workDuration]);\n\n    \n    return (\n        <div>\n            <Panel type=\"Tabata\">\n         \n            <div>\n                <h5 style = {{\n                    textTransform: 'capitalize',\n                }}\n                \n                >{isRunning}</h5>\n            </div>\n            {isRunning ==='running' && <DisplayDescription description={description}/>}\n  \n\n            <DisplayTitle title=\"Work\" />\n            {isRunning === 'not running' && <DisplayTime minutes={startMinutes} seconds={startSeconds}/>}\n            {isRunning === 'running' && <DisplayTime minutes={CalculateMinutesSeconds(counter)[0]} seconds={CalculateMinutesSeconds(counter)[1]}/>}\n            {isRunning === 'completed' && <DisplayTime minutes=\"0\" seconds=\"0\" />}\n\n            <DisplayTitle title=\"Rest\" />\n            {isRunning === 'not running' && <DisplayTime minutes={startMinutes} seconds={startSeconds}/>}\n            {isRunning === 'running' && <DisplayTime minutes={CalculateMinutesSeconds(restCounter)[0]} seconds={CalculateMinutesSeconds(restCounter)[1]} />}\n            {isRunning === 'completed' && <DisplayTime minutes=\"0\" seconds=\"0\" />}\n\n\n            {isRunning === 'not running' && <DisplayRounds round=\"1\" totalRounds={rounds} />}\n            {isRunning === 'running' && <DisplayRounds round={roundsCounter} totalRounds={rounds} />}\n            {isRunning === 'completed' && <DisplayRounds round={rounds} totalRounds={rounds} />}\n            \n        </Panel>  \n        </div>\n    \n        );\n    };\n\n\nexport default Tabata;\n","import React from \"react\";\n\nconst Button = ({value, color, onClick, interval, start}) => {\n\n    return (\n      <div\n       onClick={()=>onClick(interval, start)}   \n        style={{\n            padding: 5,\n            width: 200,\n            margin: 5,\n            backgroundColor: color,\n            fontSize: \"1rem\",\n            textAlign: \"center\",\n            borderRadius: \"5px\",\n            // marginRight: \"auto\",\n            // marginLeft: \"auto\",\n            fontWeight: \"600\",\n            textTransform: \"uppercase\"\n        }}>\n            {value}\n\n      </div>  \n    );\n\n    \n};\n\nexport default Button;","import React from \"react\";\n\n    \nconst TimerInput = ({options, value, timeType, onChange}) => {\n    let listOptions = ''\n    if (options){\n        listOptions = options.map((option,index) => <option key={index} value={option}>{option}</option>);\n    }\n    else {\n        listOptions=<option>none</option>\n    }\n  \n\treturn (\n\n        \n        <span style={{ padding:2 }}>\n            <select value={value} onChange={e => onChange(e.target.value)} >\n                {listOptions}\n            </select>\n        </span>\n\t\t);\n    \n};\n\nexport default TimerInput;","import React from \"react\";\n\nconst DescriptionInput = ({value, onChange}) => {\n\n\treturn (\n        <span>\n            <input \n                value={value}\n                onChange={e => onChange(e.target.value)} \n                style={{marginBottom: 10}}\n            />\n        </span>\n\t\t);\n    \n};\n\nexport default DescriptionInput;","import React from \"react\";\nimport { ErrorBoundary } from 'react-error-boundary';\nimport { useContext, useState } from \"react\";\n\n\nimport Button from \"../components/generic/Button\";\nimport TimerInput from \"../components/generic/TimerInput\";\nimport DescriptionInput from \"../components/generic/DescriptionInput\";\nimport MyFallbackComponent from \"../views/TimersView\";\n\nimport { TimersContext } from \"../utils/TimersProvider\";\n\n\nexport const Editor = ({ editorTimer }) => {\n    const { timers, editTimer, saveTimer, closeEditor, secondsOptions, minutesOptions, roundsOptions } = useContext(TimersContext);\n    const [selectedTimer, setSelectedTimer ] = useState(editorTimer?.selectedTimer ?? '');\n    const [startMinutes, setStartMinutes] = useState(editorTimer?.startMinutes ?? '');\n    const [startSeconds, setStartSeconds] = useState(editorTimer?.startSeconds ?? '');\n    const [rounds, setRounds] = useState(editTimer?.rounds ?? '');\n    const [startRestMinutes, setStartRestMinutes] = useState(editorTimer?.restMinutes ?? '');\n    const [startRestSeconds, setStartRestSeconds] = useState(editorTimer?.restSeconds ?? '');\n    const [description, setDescription] = useState(editorTimer?.description ?? '');\n    \n    const handleAddTimerInput = (value) => {\n        setSelectedTimer(value);\n    };\n\n    const handleSelectedTimerMinutes = (value) => {\n            setStartMinutes(value);\n    }\n    \n    const handleSelectedTimerSeconds = (value) => {\n        setStartSeconds(value);\n    }\n\n    const handleSelectedTimerRestMinutes = (value) => {\n        setStartRestMinutes(value);\n    }\n\n    const handleSelectedTimerRestSeconds = (value) => {\n        setStartRestSeconds(value);\n    }\n\n    const handleSelectedTimerRounds = (value) => {\n        setRounds(value);\n    }\n\n    const handleSelectedTimerDescription = (value) => {\n        setDescription(value);\n    }\n\n    let listOptions = '';\n    let options = ['Choose One', 'Stopwatch', 'Countdown', 'XY', 'Tabata'];\n\n\n    if (options){\n        listOptions = options.map((option,index) => <option key={index} value={option}>{option}</option>);\n    }\n    else {\n        listOptions=<option>none</option>\n    }\n    return (\n        <ErrorBoundary fallback={<div>Something Failed</div>} FallbackComponent={MyFallbackComponent}>\n\n            <div>\n                <h2>Editor</h2>\n                    {/* <select id=\"select-timers\" onChange={e => handleAddTimerInput(e.target.value)}> */}\n                    <select value={editorTimer.selectedTimer} onChange={e => handleAddTimerInput(e.target.value)}>\n                    {/* <select value={\"Stopwatch\"} onChange={e => handleAddTimerInput(e.target.value)}> */}\n                        {listOptions}\n                    </select>\n                    {/* } */}\n            \n                {(selectedTimer === 'Stopwatch' || (selectedTimer && selectedTimer.selectedTimer === 'Stopwatch')) &&  \n                //  {selectedTimer === 'Stopwatch' && \n                    (<div>\n                        \n                        <h6 style={{\n                            marginBottom:0,\n                        }}>\n                            Description: \n                        </h6>\n                        <DescriptionInput value={editorTimer.description} onChange={handleSelectedTimerDescription} />\n                        <h6 style={{\n                            marginBottom:0,\n                            }}>Minutes : Seconds\n                        </h6>\n                        <TimerInput value={editorTimer.startMinutes} options={minutesOptions} timeType=\"Minutes\" onChange={handleSelectedTimerMinutes}/> \n                        <span>:</span>\n                        <TimerInput value={editorTimer.startSeconds} options={secondsOptions} timeType=\"Seconds\" onChange={handleSelectedTimerSeconds}/>\n                    \n                    </div>) \n                }\n\n                {selectedTimer === 'Countdown' && \n                    (<div>\n                        <h6 style={{\n                            marginBottom:0,\n                        }}>\n                            Description: \n                        </h6>\n                        <DescriptionInput onChange={handleSelectedTimerDescription} />\n                        <h6 style={{\n                            marginBottom:0,\n                            }}>Minutes : Seconds\n                        </h6>\n                        <TimerInput options={minutesOptions} timeType=\"Minutes\" onChange={handleSelectedTimerMinutes}/> \n                        <span>:</span>\n                        <TimerInput options={secondsOptions} timeType=\"Seconds\" onChange={handleSelectedTimerSeconds}/>\n                    </div>) \n                }\n\n                {selectedTimer === 'XY' && \n                    (<div>\n                        <h6 style={{\n                            marginBottom:0,\n                        }}>\n                            Description: \n                        </h6>\n                        <DescriptionInput onChange={handleSelectedTimerDescription} />\n                        <h6 style={{\n                            marginBottom:0,\n                            }}>Minutes : Seconds\n                        </h6>\n                        <TimerInput options={minutesOptions} timeType=\"Minutes\" onChange={handleSelectedTimerMinutes}/> \n                        <span>:</span>\n                        <TimerInput options={secondsOptions} timeType=\"Seconds\" onChange={handleSelectedTimerSeconds}/>\n                        <h6 style={{\n                            marginBottom:0,\n                            }}>Rounds\n                        </h6>\n                        <TimerInput options={roundsOptions} timeType=\"Rounds\" onChange={handleSelectedTimerRounds}/>\n                    </div>) \n                }\n\n                {selectedTimer === 'Tabata' && \n                    (<div>\n                        <h6 style={{\n                            marginBottom:0,\n                        }}>\n                            Description: \n                        </h6>\n                        <DescriptionInput onChange={handleSelectedTimerDescription} />\n                        <h5 style={{\n                            marginBottom: 2,\n                        }}>\n                            Work\n                            </h5>\n                        <h6 style={{\n                            marginTop: 0,\n                            marginBottom:2,\n                            }}>Minutes : Seconds\n                        </h6>\n                        <TimerInput options={minutesOptions} timeType=\"Minutes\" onChange={handleSelectedTimerMinutes}/> \n                        <span>:</span>\n                        <TimerInput options={secondsOptions} timeType=\"Seconds\" onChange={handleSelectedTimerSeconds}/>\n                        <div>\n                        <h5 style={{\n                            marginBottom:2,\n                            }}>\n                            Rest\n                        </h5>\n                            <h6 style={{\n                                marginTop:0,\n                                marginBottom:0,\n                                }}>Minutes : Seconds\n                            </h6>\n                            <TimerInput options={minutesOptions} timeType=\"Minutes\" onChange={handleSelectedTimerRestMinutes}/> \n                            <span>:</span>\n                            <TimerInput options={secondsOptions} timeType=\"Seconds\" onChange={handleSelectedTimerRestSeconds}/>\n                        </div>\n\n                        <h5 style={{\n                            marginBottom:2,\n                            }}>\n                            Rounds\n                        </h5>\n                        <TimerInput options={roundsOptions} timeType=\"Rounds\" onChange={handleSelectedTimerRounds}/>\n                    </div>) \n                }\n\n                {selectedTimer && \n                    <div>\n                        <Button value=\"Save\"\n                            color=\"#aaa0ff\"\n                            onClick={() => {\n                                saveTimer({\n                                    id: editorTimer?.id,\n                                    index: (timers.length === 0) ? 0 : timers.length,\n                                    selectedTimer,\n                                    startMinutes,\n                                    startSeconds,\n                                    isRunning: 'not running',\n                                    rounds,\n                                    startRestMinutes,\n                                    startRestSeconds,\n                                    description,    \n                                });\n                            }}\n                        />\n                        \n                        <Button value=\"Cancel\"\n                            color=\"#aaa0ff\" \n                            onClick={() => {\n                                closeEditor();\n                        }} />\n                </div>}\n\n\n\n            </div>\n\n\n    </ErrorBoundary>\n    );\n};\n\n\nconst AddTimersView = () => {\n    const { timers, openEditor, editorOpen, deleteTimer } = useContext(TimersContext);\n  \n\treturn (\n        <div>\n            <span>\n                <Button value=\"Add New Timer\" color=\"#aaa0ff\" onClick={() => openEditor()} />\n\n                {editorOpen && <Editor />}\n            </span>\n\n\n      <h3>Workout Schedule</h3>\n      {timers.map((timer) => (\n        <div>\n            {timer.selectedTimer}\n        \n            <Button value=\"Delete Timer\" onClick={() => {\n                deleteTimer({ id: timer.id });\n            }} />\n\n            {/* <Button value=\"Add New Timer\" color=\"#aaa0ff\" onClick={() => openEditor()} /> */}\n\n\n        </div>\n      \n      ))}\n\n\n    </div>\n\t\t);\n                \n};\n\nexport default AddTimersView;\n","import React from \"react\";\nimport { useContext, useEffect } from \"react\";\nimport { ErrorBoundary } from 'react-error-boundary';\nimport styled from \"styled-components\";\n\nimport Stopwatch from \"../components/timers/Stopwatch\";\nimport Countdown from \"../components/timers/Countdown\";\nimport XY from \"../components/timers/XY\";\nimport Tabata from \"../components/timers/Tabata\";\n\nimport Button from \"../components/generic/Button\";\nimport DisplayTime from \"../components/generic/DisplayTime\";\n\nimport { TimersContext } from \"../utils/TimersProvider\";\nimport { Editor } from \"../views/AddTimersView\";\nimport { CalculateTotalSeconds, CalculateMinutesSeconds, CreateHash } from \"../utils/helpers\";\n\n\nconst Timers = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\n\nconst Timer = styled.div`\n  border: 1px solid gray;\n  padding: 20px;\n  margin: 10px;\n  font-size: 1.5rem;\n`;\n\n\nfunction MyFallbackComponent({ error, resetErrorBoundary }) {\n  return (\n    <div role=\"alert\">\n      <p>Something went wrong:</p>\n      <pre>{error.message}</pre>\n      <button onClick={resetErrorBoundary}>Try again</button>\n    </div>\n  );\n}\n\nconst TimersView = () => {\n  const { timers, editTimer, setEditTimer, totalTime, setTotalTime, hash, setHash, deleteTimer, handleTimerStart, handleWorkoutReset, handlePauseResume, handleFastForward, setTimers} = useContext(TimersContext);\n\n\n  useEffect (() => {\n    if (timers.length > 0){\n      setHash(()=>{\n        return CreateHash(timers);\n      });\n  }  \n\n  }, []); // eslint-disable-line\n\n \n  \n  window.location.hash = encodeURIComponent(hash);\n\n  \n\n  const timersDisplay = []\n  for (let i=0; i<timers.length; i++){\n    if (timers[i].selectedTimer === 'Stopwatch'){\n      timersDisplay.push({title: \"Stopwatch\", id: timers[i].id, index: i, C: <Stopwatch id={timers[i].id} index={i} startMinutes={timers[i].startMinutes} startSeconds={timers[i].startSeconds} isRunning={timers[i].isRunning} description={timers[i].description} />})\n    }\n    else if (timers[i].selectedTimer === 'Countdown'){\n      timersDisplay.push({title: \"Countdown\", id: timers[i].id, index: i, C: <Countdown id={timers[i].id} index={i} startMinutes={timers[i].startMinutes} startSeconds={timers[i].startSeconds} isRunning={timers[i].isRunning} description={timers[i].description} />})\n    }\n    else if (timers[i].selectedTimer === 'XY'){\n      timersDisplay.push({title: \"XY\", id: timers[i].id, index: i,  C: <XY id={timers[i].id} index={i} startMinutes={timers[i].startMinutes} startSeconds={timers[i].startSeconds} rounds={timers[i].rounds} isRunning={timers[i].isRunning} description={timers[i].description} />})\n    }\n    else if (timers[i].selectedTimer === 'Tabata'){\n      timersDisplay.push({title: \"Tabata\", id: timers[i].id, index: i, C: <Tabata id={timers[i].id} index={i} startMinutes={timers[i].startMinutes} startSeconds={timers[i].startSeconds} rounds={timers[i].rounds} startRestMinutes={timers[i].startRestMinutes} startRestSeconds={timers[i].startRestSeconds} isRunning={timers[i].isRunning} description={timers[i].description} />})\n    }\n\n  }\n\n\n  useEffect (() => {\n    setTotalTime(() => {\n      let total = 0;\n      let rounds = 1;\n      for (let i=0; i<timers.length; i++){\n          if (timers[i].rounds) {\n            rounds = timers[i].rounds;\n          }\n          else {\n            rounds = 1;\n          }\n          \n          const workTime = rounds * (CalculateTotalSeconds(timers[i].startMinutes, timers[i].startSeconds));\n          const restTime = rounds * (CalculateTotalSeconds(timers[i].startRestMinutes, timers[i].startRestSeconds));\n          total = total + workTime + restTime;\n      }\n     \n      return total;\n    });\n  }, [timers]) // eslint-disable-line\n\n  const moveTimerUp = (timer, timers) => {\n    if (timer >= 0) {\n      const newTimers = [];\n\n      let newIndex = timer - 1;\n\n      const tempTimer = timers[newIndex];\n      const currentTimer = timers[timer];\n      tempTimer.index = timer;\n      currentTimer.index = newIndex;\n   \n      for (let i=0; i<timers.length; i++) {\n\n        if ((i===newIndex) && ((newIndex) >= 0)){\n\n          console.log(`currentTimer index ${currentTimer.index}`);\n          newTimers.push(currentTimer);\n          console.log(`newTimers ${newTimers[i]}`);\n      \n          newTimers.push(tempTimer);\n          i = i+1;\n          \n        }\n        else if (timers[i].selectedTimer !== timers[timer].selectedTimer) {\n          newTimers.push(timers[i]);\n        }\n      }\n      \n      setTimers(newTimers);\n      \n      setHash(()=>{\n        return CreateHash(timers);\n      });\n    }\n  }\n\n  const moveTimerDown = (timer, timers) => {\n    if (timer < timers.length -1) {\n      const newTimers = [];\n\n      let newIndex = timer + 1;\n\n      const tempTimer = timers[newIndex];\n      const currentTimer = timers[timer];\n      tempTimer.index = timer;\n      currentTimer.index = newIndex;\n   \n      for (let i=0; i<timers.length; i++) {\n\n        if ((i===timer) && (timer < timers.length)){\n          newTimers.push(tempTimer);\n          newTimers.push(currentTimer);\n      \n          \n          i = i+1;\n          \n        }\n        else if (timers[i].selectedTimer !== timers[timer].selectedTimer) {\n          newTimers.push(timers[i]);\n        }\n      }\n      \n      setTimers(newTimers);\n      \n      setHash(()=>{\n        return CreateHash(timers);\n      });\n    }\n  }\n\n  return (\n    <ErrorBoundary fallback={<div>Something Failed</div>} FallbackComponent={MyFallbackComponent}>\n\n      <div>\n        <Button value=\"Start Workout\" color='#aaa0ff' onClick={handleTimerStart} />\n        <Button value=\"Reset\" color='#aaa0ff' onClick={handleWorkoutReset} />\n        <Button value=\"Pause/Resume\" color='#aaa0ff' onClick={handlePauseResume} />\n        <Button value=\"Fast Forward\" color='#aaa0ff' onClick={handleFastForward} />\n        <h2>Total Workout Time </h2>\n        <DisplayTime minutes={CalculateMinutesSeconds(totalTime)[0]} seconds={CalculateMinutesSeconds(totalTime)[1]} />\n\n        <Timers>\n        {editTimer && <Editor editorTimer={editTimer} />}\n          {timersDisplay.map((timer) => (\n            <div key={timer.index}>\n              <Timer >\n                {timer.C}\n              </Timer>\n\n              <Button value=\"Edit\" color=\"#aaa0ff\" onClick={() => setEditTimer(timers[timer.index])}/>\n\n              <Button value=\"Delete\" color=\"#aaa0ff\" onClick={() => {\n                      deleteTimer({ id: timer.id });\n                    }} />\n              {(timer.index > 0) && <button onClick={() => { moveTimerUp(timer.index, timers)}}>Move Up</button>}\n              {(timer.index < timers.length -1) && <button onClick={() => { moveTimerDown(timer.index, timers)}}>Move Down</button>}\n                    \n            </div>\n            \n          ))}\n        </Timers>\n        \n      </div>\n  </ErrorBoundary>\n)};\n\nexport default TimersView;\n","import React from \"react\";\nimport { BrowserRouter as Router, Routes, Route, Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\n\nimport DocumentationView from \"./views/DocumentationView\";\nimport TimersView from \"./views/TimersView\";\nimport AddTimersView from \"./views/AddTimersView\";\nimport TimersProvider from \"./utils/TimersProvider\";\n\nconst Container = styled.div`\n  background: #f0f6fb;\n  height: 100vh;\n  overflow: auto;\n`;\n\nconst Nav = () => {\n  return (\n    <nav>\n      <ul>\n        <li>\n          <Link to=\"/\">Timers</Link>\n        </li>\n        <li>\n          <Link to=\"/docs\">Documentation</Link>\n        </li>\n        <div style={{\n          backgroundColor: '#c0c0c0',\n          padding: 10,\n          borderRadius: 10,\n          width: \"fit-content\",\n        }}>\n          <Link style={{ textDecoration: \"None\"}}to=\"/add\">Add Timers</Link>\n        </div>\n\n        <div style={{\n          backgroundColor: '#c0c0c0',\n          padding: 10,\n          borderRadius: 10,\n          width: \"fit-content\",\n        }}>\n          <Link style={{ textDecoration: \"None\"}}to=\"/\">Home</Link>\n        </div>\n        \n      </ul>\n    </nav>\n  );\n};\n\nconst App = () => {\n  return (\n    <TimersProvider>\n      <Container>\n        <Router>\n          <Nav />\n          <Routes>\n            <Route path=\"/docs\" element={<DocumentationView />} />\n            <Route path=\"/\" element={<TimersView />} />\n            <Route path=\"/add\" element={<AddTimersView />} />\n            <Route path=\"/edit/:timerId\" element={<AddTimersView />} />\n          </Routes>\n        </Router>\n      </Container>\n    </TimersProvider>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom/client\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nconst root = ReactDOM.createRoot(document.getElementById(\"root\"));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n"],"sourceRoot":""}